@{
    ViewData["Title"] = "Home Page";
}
<div class="container">
    <div class="row mb-3">
        <div class="col-lg-12 col-md-12 col-sm-8">
            <div>
                <form id="userFilterForm" autocomplete="off" method="POST" class="form-floating">
                    <div class="row mb-3">
                        <div class="col-xl-3 col-lg-4 col-md-4 col-sm-12 mb-sm-2 mb-md-3 mb-3">
                            <input type="text" class="form-control" id="name" name="name" placeholder="Name" />
                        </div>
                        <div class="col-xl-3 col-lg-4  col-md-4 col-sm-12 mb-sm-2 mb-md-3 mb-3">
                            <input type="text" class="form-control" id="email" name="email" placeholder="Email" />
                        </div>
                        <div class="col-xl-3 col-lg-4  col-md-4 col-sm-12 mb-sm-2 mb-md-3 mb-3">
                            <input type="text" class="form-control" id="country" name="country" placeholder="Country" />
                        </div>
                        <div class="col-xl-3 col-lg-6 col-md-8 col-sm-12">
                            <button type="submit" class="btn btn-success mx-1">Apply Filters</button>
                            <button type="button" class="btn btn-primary mx-1" id="clearFilter">Clear Filters</button>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12 col-sm-12 table-responsive">
            <table class="table table-striped display responsive nowrap" id="userTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Country</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>

    </div>
</div>



@section Styles {
    <link rel="stylesheet" href="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/searchbuilder/1.3.4/css/searchBuilder.dataTables.min.css" />
}

    @section Scripts {
    <script src="~/lib/moment.js/moment.min.js"></script>
    <script src="~/lib/datatables.net/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/searchbuilder/1.3.4/js/dataTables.searchBuilder.min.js" async></script>
    <script type="text/javascript" defer>
        $(document).ready(function () {
            var isFetching = false;

            jQuery.fn.dataTable.Api.register('processing()', function (show) {
                return this.iterator('table', function (ctx) {
                    ctx.oApi._fnProcessingDisplay(ctx, show);
                });
            });

            var table = $("#userTable").DataTable({
                paging: true,
                responsive: true,
                processing: true, //dispaly info whiel fetching records from api
                serverSide: true, //enables server side processing
                searchDelay: 1000, //triggers search function after this time delay
                "sPaginationType": "full_numbers",
                "language": {
                    "processing": '<div class="spinner-border m-5" role="status"> <span class="visually-hidden">Loading...</span></div>' //loader while processing
                },
                dom: 'Qlfrtip',
                //searchBuilder: {
                //    depthLimit: 2
                //},
                buttons: [
                    {
                        extend: 'searchBuilder',
                        config: {
                            depthLimit: 2
                        }
                    }
                ],
                search: {
                    return: false
                },
                searching: {
                    regex: false
                },
                ajax: {
                    url: "/Home/GetUsers",
                    type: "POST",
                    data: function (d) {
                        console.log(d);
                    },
                    error: function (e) {
                        console.error({ ...e.responseJSON });
                        isFetching = false;
                        table.processing(false);
                    }
                },
                columns: [
                    {
                        data: "name",
                        name: "Name",
                    },
                    {
                        data: "username",
                        name: "Username",
                        orderable: false,
                        searchable: false,
                    },
                    {
                        data: "email",
                        name: "Email",
                    },
                    {
                        data: "country",
                        name: "Country",
                    },
                    {
                        data: "status",
                        name: "Status",

                    }
                ]
            });

            var form = $("#userFilterForm");


            $('#userFilterForm').on('submit', function (e) {
                e.preventDefault();

                var searchValue = $('#name').val();
                if (!!searchValue && table.columns(0).search() != searchValue) {
                    table.columns(0).search(searchValue).draw();
                } else {
                    table.columns(0).search('').draw();
                }

                var searchEmail = $('#email').val();
                if (!!searchEmail && table.columns(2).search() != searchEmail) {
                    table.columns(2).search(searchEmail).draw();
                } else {
                    table.columns(2).search('').draw();
                }

                var searchCountry = $('#country').val();
                if (!!searchCountry && table.columns(3).search() != searchCountry) {
                    table.columns(3).search(searchCountry).draw();
                } else {
                    table.columns(3).search('').draw();
                }
            });


            $('#clearFilter').on('click', function (e) {
                e.preventDefault();

                if (!checkEmptyFields()) {
                    form[0].reset();
                    table.columns(0).search('')
                    table.columns(2).search('')
                    table.columns(3).search('')
                    table.draw();
                }


            });

            function checkEmptyFields() {
                let isEmpty = true;
                $("#userFilterForm input[type=text]").each(function () {
                    if (this.value?.length > 0) {
                        isEmpty = false;
                        return;
                    }
                });
                return isEmpty;
            }

            $(".dataTables_filter input")
                .unbind() // Unbind previous default bindings
                .bind("keyup clear", function () {

                    if (isFetching) {
                        return;
                    }

                    isFetching = true;
                    setTimeout(() => {
                        console.log('clicked');
                        table.search(this.value).draw();
                        table.processing(true);
                        isFetching = false;
                    }, 1000)
                });


        });
    </script>

    }

